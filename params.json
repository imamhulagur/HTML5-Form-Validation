{"name":"HTML5 Form Validation","tagline":"jQuery plugin by ZFDesign","body":"# HTML5 form validation jQuery plugin\r\nGrab, modify, apply, enjoy...\r\n\r\n\r\n## Description\r\n\r\nA JavaScript, jQuery plugin for client side HTML5 form validation. Link to the \r\n[Web site](http://zfdesign.github.com/HTML5-Form-Validation/) dedicated to this pugin. \r\n\r\nThis HTML5 Form validation plugin is _free_ and hopefully it will be found easy \r\nto use and implement on your Web site under MIT [License](#license). \r\nPlease quote the plugin author wherever possible and refer to the documentation. \r\n\r\nThis plugin adheres to HTML5 Forms specification to _gracefully degrade_ to browser \r\nbuitin validation. It supresses the compliant browsers default validation messages, \r\nallowing the user to specify container for individual error messages or to\r\ngroup error messages in a single container at a suitable place on the page.\r\nIt employs \"data-\" attributes to provide functionality and bind warning messages. \r\nIt will also work with older browsers and non HTML5 Form documents, remember to test.\r\nDo not assume it will just work. \r\n\r\nThe Web developer is in control over validation executions, with function call-backs \r\nfor Validation events. It has a debug mode and a way that allows to access features \r\nand enble debugging in production code. \r\n\r\n\r\n##List of supported validation checks \r\n\r\n* Required attribute [(standard)](http://www.whatwg.org/specs/web-apps/current-work/multipage/common-input-element-attributes.html#the-required-attribute)\r\n* Minimum length through custom \"data-minlength\" attribute (can be set by the developer)\r\n* Maxlength attribute [(standard)](http://www.whatwg.org/specs/web-apps/current-work/multipage/common-input-element-attributes.html#the-maxlength-attribute)\r\n* Pattern attribute [(standard)](http://www.whatwg.org/specs/web-apps/current-work/multipage/common-input-element-attributes.html#the-pattern-attribute)\r\n* Custom validation rules\r\n* Date: Day, Month and Year\r\n\r\nRef. [www.whatwg.org Client side form validation](http://www.whatwg.org/specs/web-apps/current-work/multipage/forms.html#client-side-form-validation) \r\n\r\nThose are provided out of the box, but feel free to tweak and modify for your needs. \r\nFork on GitHub and/or submit your suggestions for improvements. The author has \r\nalready a few tweaks in his mind. Finding the time for it all is difficult. \r\n\r\nEnough talking lets get started...\r\n\r\n\r\n# Use cases\r\n\r\nHere are a few examples from the [Web site](http://zfdesign.github.com/HTML5-Form-Validation/) dedicated to this pugin. \r\n\r\n* [Login form](http://zfdesign.github.com/HTML5-Form-Validation/examples/login.html)\r\n* [Registration form](http://zfdesign.github.com/HTML5-Form-Validation/examples/register.html)\r\n* Custom error appearance \r\n** [Single error container for all form fields](http://zfdesign.github.com/HTML5-Form-Validation/examples/register.html#SingleErrorContainer)\r\n** Multiple groups of error containers - [Card details example](http://zfdesign.github.com/HTML5-Form-Validation/examples/card-details.html)\r\n\r\n\r\n# Implementation \r\n\r\n## Simple\r\nIt could is a simple as: \r\n\r\n* Include jQuery and ZFValidateForm.js\r\n* Set Input attributes (requires use of custom \"data-\" attributes)\r\n* Add a JavaScript line: \r\n\r\n\t$('formSelector').ZFValidateForm(); \r\n\r\n\r\n## With 'options'\r\n\r\nIt is similar as above, but when needed the user can customise some of the defaults. \r\nA simple example is the [Card details example](http://zfdesign.github.com/HTML5-Form-Validation/examples/card-details.html). \r\n\r\n\r\n### Options reference: \r\n\r\n* defaultErrorMessage: \t\t'* Incorrect input', \t\t// Default Error message if one not found\r\n* errorClassName: \t\t\t'error', \t\t\t\t\t// Error class attribute value - NOT jQuery selector \r\n* errorWrapToggleClass: \t'showError', \t\t\t\t// Error class attribute value - NOT jQuery selector \r\n* singleErrorContainer: \t'.formValidationError', \t// All Error messages in a Single container - jQuery Selector\r\n* useSingleErrorContainer: \tfalse, \t\t\t\t\t\t// Enable all Error messages in a single container\r\n* useCustomErrorContainer: \tfalse, \t\t\t\t\t\t// Enable all Error messages in the custom container specified in 'data-error-container'\r\n* errorInsertBeforeField:  \tfalse,               \t\t// Place Error message before validated field (does NOT apply when \"errorClassName\" element is Input sibling, NOR when useSingleErrorContainer = true)\r\n* hideErrorOnClearedInput: \ttrue, \t\t\t\t\t\t// Hide Error messages when Input is cleared by the user\r\n* disableBrowserValidation:\ttrue, \t\t\t\t\t\t// Disable HTML5 Browser validation (should be set to 'true') \r\n\r\n// events\r\n* validateOnKeyup: \t\t\tfalse, \t\t\t\t\t\t// Validate Field onKeyup event\r\n* validateOnBlur: \t\t\tfalse, \t\t\t\t\t\t// Validate Field onBlur event\r\n* validateOnChange: \t\ttrue, \t\t\t\t\t\t// Validate Field onChange event\r\n* validateOnLoad: \t\t\tfalse, \t\t\t\t\t\t// Validate Form on Document load and return \"isFormValid\"\r\n* validateInputType: \t\tfalse, \t\t\t\t\t\t// Validate Field Type (NOT IN USE reserved for future)\r\n* validateCustomRules:\t\ttrue,\t\t\t\t\t\t// Validates fields with attribute data-custom-validity='{\"type\": \"expiryDate\", \"arguments\": {\"key\": \"value\"}}'\r\n* onDemandValidate: \t\tfalse, \t\t\t\t\t\t// TRUE: will give access to: $.fn.ZFValidateForm.onDemandValidate() Method - validates the Form with callback options, returns \"isFormValid\"\r\n\r\n// callbacks\r\n* onFieldValid: \t\t\tfunction(){}, \t\t\t\t// onChange and onKeyup Field Valid Callback (runs onChange and onKeyup to avoid performance issues)\r\n* onFieldNotValid: \t\t\tfunction(){}, \t\t\t\t// onChange and onKeyup Field NOT Valid Callback (runs onChange and onKeyup to avoid performance issues)\r\n* onFormValid: \t\t\t\tfunction(){}, \t\t\t\t// on Submit and Form Valid Callback\r\n* onFormInvalid: \t\t\tfunction(){}, \t\t\t\t// on Submit and Form NOT Valid Callback\r\n\r\n// field attributes\r\n* minLength: \t\t\t\t1, \t\t\t\t\t\t\t\t// default minimum length to validate against if no minLengthAttribute value is provided\r\n* maxLength: \t\t\t\t256, \t\t\t\t\t\t// default maximum length to validate against if no \"maxlength\" Attribute value is provided\r\n* minLengthAttribute: \t\t'data-minlength', \t\t\t// Attribute name for minimum required length \r\n* minLengthMessage: \t\t'data-minlength-message',\t// Error message on minimum length validation fail\r\n* maxLengthMessage: \t\t'data-maxlength-message',\t// Error message on \"maxlength\" validation fail\r\n* requiredMessage: \t\t\t'data-required-message',\t// Error message on \"required\" validation fail\r\n* patternMessage: \t\t\t'data-pattern-message',\t\t// Error message on \"pattern\" validation fail\r\n* matchAttribute: \t\t\t'data-match-field',\t\t\t// Attribute name for field matching values - jQuery Selector\r\n* matchMessage: \t\t\t'data-match-message',\t\t// Error message on \"field match\" validation fail\r\n\r\n// Debug mode\r\ndebugMode: false  \t\t\t\t\t\t\t\t\t\t// Displays messages in the Console\r\n\r\n\r\n\r\nRemeber Client side validation does enfoce business logic, it is there to suggest, \r\nhelp and guide the user through sometimes mundaine form submission. \r\n\r\n\r\n## Browser support \r\n\r\nAt the time of writing the plugin is found to be working well and stable in the most popular \r\ndesktop browsers (Chrome, Firefox, Safari, Opera) in Windows, Mac OS, iOS and Android, it is \r\nthe imperative that you test for the platfoms you intend to support.\r\n\r\nThe browser landscape changes everyday with updates pushed and new ones being available. \r\nMany variations depending on hardware vary especially on Mobile devices are present. Although \r\nintention is for updates and bug fixes to be made regularly and as per requests, the author \r\ncannot take responsibility for implementations. \r\n\r\n\r\n## Dependencies \r\n\r\nAssumes basic JavaScript understanding. \r\njQuery 1.7 and above is recommended (works with some earlier versions)\r\n\r\nRequires that user to be able to specify custom \"data-\" attributes in the markup. \r\n\r\n\r\n## Disclaimer \r\n\r\nSince this is free to use software developed in my spare time it comes with no worranties \r\nand the author would not take any responsibility for implementations. \r\n\r\nClient side Form validation is to aid the user with filLing in a Form, warn them before \r\nan aditional HTTP request is made where the business logic validation rules should apply.\r\n\r\n\r\n## License\r\n\r\nMIT License  \r\nCopyright (c) ZFDesign  \r\n\r\n","google":"UA-36167107-1","note":"Don't delete this file! It's used internally to help with page regeneration."}